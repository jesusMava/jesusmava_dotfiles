filetype plugin indent on

call plug#begin('~/.vim/vimPlugins')
  Plug 'editorconfig/editorconfig-vim'
  Plug 'bling/vim-airline'
  Plug 'vim-airline/vim-airline-themes'
  Plug 'tmhedberg/matchit'
  Plug 'tpope/vim-surround'
  Plug 'burntsushi/ripgrep'
  Plug 'mattn/emmet-vim'
  Plug 'preservim/nerdtree'
  Plug 'christoomey/vim-tmux-navigator'
  Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
  Plug 'junegunn/fzf.vim'
call plug#end()

let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#buffer_nr_show = 1
let g:airline_theme='base16_colors'
let g:airline_powerline_fonts = 1
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#branch#empty_message = ''
let g:airline#extensions#branch#displayed_head_limit = 10
let g:airline#extensions#branch#format = 0
let mapleader=" "
let g:user_emmet_leader_key=','

nnoremap [b :bp<CR>
nnoremap ]b :bp<CR>

set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/build/*,*/node_modules/*

" --- list chars ---
"  " list spaces and tabs to avoid trailing spaces and mixed indentation
"  " see key mapping at the end of file to toggle `list`
set listchars=tab:▹\ ,trail:·,nbsp:⚋
set fillchars=fold:-
set list

set clipboard=unnamedplus "acces to clipboard
set autoindent 
"identation
set expandtab  " Expand tabs to spaces

syntax enable

set syntax=sh
set showcmd "show command type out
set showmatch "show the pairs of brakets

nmap <leader>w :w<CR>
nmap <leader>q :q<CR>

set noshowmode
set ignorecase
set softtabstop=2
set tabstop=2
set shiftwidth=2
set smartindent
set smarttab
set pastetoggle=<F2>
set number
set lazyredraw
"hightlight  curren line 
hi CursorLine cterm=NONE ctermfg=NONE guibg=#181818 guifg=#dddddd ctermbg=black gui=bold
hi Visual cterm=NONE ctermbg=0 ctermfg=NONE guibg=Grey40
set cursorline

" turn off highlighted
nnoremap <F3> :set hlsearch!<CR>

" find merge conflict markers
nmap <silent> <leader>fc <ESC>/\v^[<=>]{7}( .*\|$)<CR>

"nerdtree charge when your open vim
"autocmd vimenter * NERDTree
let NERDTreeWinSize = 17
nmap <F6> :NERDTreeToggle<CR>

set nobackup
set nowritebackup
set noswapfile
set statusline+=%F

"FZF
let g:fzf_action = {
  \ 'ctrl-t': 'tab split',
  \ 'ctrl-u': 'split',
  \ 'ctrl-s': 'vsplit' }
:nmap <C-p> :Files<Cr>
nnoremap <C-g> :Rg<CR>

"nnoremap <C-G> :Find<CR>
"Rg
" --column: Show column number
" --line-number: Show line number
" --no-heading: Do not show file headings in results
" --fixed-strings: Search term as a literal string
" --ignore-case: Case insensitive search
" --no-ignore: Do not respect .gitignore, etc...
" --hidden: Search hidden files and folders
" --follow: Follow symlinks
" --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
" --color: Search color options
command! -bang -nargs=* Find
  \ call fzf#vim#grep(
  \   'rg --column --line-number --no-heading --color=always '.shellescape(expand('<cword>')), 1,
  \   <bang>0 ? fzf#vim#with_preview('up:30%')
  \           : fzf#vim#with_preview('right:50%:hidden', '?'),
  \   <bang>0)

